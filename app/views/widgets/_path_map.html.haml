// Each srcdata[srcid] should contain an array of elements corresponding to points of a person's path
// TBD: Remove reference to "feeds" in this code - this is making it Thingspeak specific

- divid = "path_map#{widget.id}"
%div{:id => "#{divid}", :style => "height:250px"}

%script{:type => "text/javascript", :src => "http://www.openlayers.org/api/OpenLayers.js"}
   
%script
  :plain
    var fromProjection#{widget.id} = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
    var toProjection#{widget.id}   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
  
    map#{widget.id} = new OpenLayers.Map("#{divid}");
    var mapnik#{widget.id} = new OpenLayers.Layer.OSM();
    map#{widget.id}.addLayer(mapnik#{widget.id});

    var lineLayer#{widget.id} = new OpenLayers.Layer.Vector("Line_#{divid}");
    map#{widget.id}.addLayer(lineLayer#{widget.id});

    var style#{widget.id} = { 
      strokeColor: '#0000ff', 
      strokeOpacity: 0.5,
      strokeWidth: 5
    };
    
    function getPoints#{widget.id}() {
      $.getJSON("/widgets/#{widget.id}/getData.json", function(response) {
        var srcdata = response.data.srcdata;
        var metadata = response.data.metadata;    

        for (var srcid in srcdata) {
          var points = new Array();
          for (var i=0; i<srcdata[srcid]["feeds"].length; i++) {
            var entry = srcdata[srcid]["feeds"][i];
            points.push(new OpenLayers.Geometry.Point(entry["longitude"], entry["latitude"]).transform(fromProjection#{widget.id}, toProjection#{widget.id}));
          }; // end for (srcdata[srcid]["feeds"])
          var line = new OpenLayers.Geometry.LineString(points);
          var lineFeature = new OpenLayers.Feature.Vector(line, null, style#{widget.id});
          lineLayer#{widget.id}.addFeatures([lineFeature]);
        }; // end for(srcdata)

        centerposition = new OpenLayers.LonLat(77.6, 12.97).transform(fromProjection#{widget.id}, toProjection#{widget.id});
        map#{widget.id}.setCenter(centerposition, 8);
        lineLayer#{widget.id}.redraw();
      }); // end function(response)
    }; // end function getPoints()

    getPoints#{widget.id}();

    setInterval("getPoints#{widget.id}()", 30000);
